
&НаКлиенте
Процедура ЗаполнитьРуны(Команда)
	ЗаполнитьРуныНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРуныНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РунныеСловаРуны.Руна,
	|	РунныеСловаРуны.НомерСтроки КАК НомерСтроки,
	|	РунныеСлова.НаименованиеНаРунном КАК НаименованиеНаРунном
	|ИЗ
	|	Справочник.РунныеСлова.Руны КАК РунныеСловаРуны
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РунныеСлова КАК РунныеСлова
	|		ПО РунныеСловаРуны.Ссылка = РунныеСлова.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	НаименованиеНаРунном,
	|	НомерСтроки";
	
	ВремТЗ = Запрос.Выполнить().Выгрузить(); 
	ОбработанныеРуны = Новый Массив();
	ТекущийМассивРун = Новый Массив();
	ТекущееСлово = "";
	Для Сч = 0 По ВремТЗ.Количество() - 1 Цикл
		СтрокаТЗ = ВремТЗ[Сч];
		Если ТекущееСлово <> СтрокаТЗ.НаименованиеНаРунном Тогда
			ТекущееСлово = СтрокаТЗ.НаименованиеНаРунном;
			ТекущаяРуна = "";
			ДлинаСтроки = СтрДлина(ТекущееСлово);
			Для СчБуква = 1 По ДлинаСтроки Цикл
				ТекущаяБуква = Сред(ТекущееСлово, СчБуква, 1);
				Если ТекущаяБуква = ВРег(ТекущаяБуква) Тогда
					Если ТекущаяРуна = "" Тогда
						ТекущаяРуна = ТекущаяРуна + ТекущаяБуква;
						Продолжить;
					КонецЕсли;
					ТекущийМассивРун.Добавить(ТекущаяРуна);
					ТекущаяРуна = ТекущаяБуква;
				ИначеЕсли СчБуква = ДлинаСтроки Тогда
					ТекущаяРуна = ТекущаяРуна + ТекущаяБуква;
					ТекущийМассивРун.Добавить(ТекущаяРуна);
					ТекущаяРуна = "";
				Иначе
					ТекущаяРуна = ТекущаяРуна + ТекущаяБуква;
				КонецЕсли;
			КонецЦикла;
			
			Для СчРуна = 0 По ТекущийМассивРун.ВГраница() Цикл
				ТекущаяРуна = ТекущийМассивРун[СчРуна];
				Если ОбработанныеРуны.Найти(ТекущаяРуна) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				РунаОбъект = ВремТЗ[Сч + СчРуна].Руна.ПолучитьОбъект(); // СправочникОбъект.Руны
				РунаОбъект.АнглийскоеНаименование = ТекущаяРуна;
				РунаОбъект.Записать();
				ОбработанныеРуны.Добавить(ТекущаяРуна);
			КонецЦикла;
			ТекущийМассивРун.Очистить();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКамни(Команда)
	ЗаполнитьКамниНаСервере();
КонецПроцедуры

// Получить структуру текста.
// 
// Возвращаемое значение:
//  Структура - Получить структуру текста:
// * Английский 
// * Русский 
&НаСервере
Функция ПолучитьСтруктуруТекста()
	Возврат Новый Структура("Английский, Русский");
КонецФункции

&НаСервере
Процедура ЗаполнитьКамниНаСервере()
	Макет = ПолучитьОбщийМакет("Камни");
	
	КамниТЗ = Новый ТаблицаЗначений();
	МетаданныеРеквизиты = Метаданные.Справочники.Камни.Реквизиты;
	
	КамниТЗ.Колонки.Добавить("НазваниеНаАнглийском", МетаданныеРеквизиты.НазваниеНаАнглийском.Тип);
	КамниТЗ.Колонки.Добавить("НаименованиеКамняАнглийское", МетаданныеРеквизиты.НаименованиеКамняАнглийское.Тип);
	КамниТЗ.Колонки.Добавить("Наименование", МетаданныеРеквизиты.НаименованиеКамняРусское.Тип);
	КамниТЗ.Колонки.Добавить("НаименованиеКамняРусское", МетаданныеРеквизиты.НаименованиеКамняРусское.Тип);
	КамниТЗ.Колонки.Добавить("Качество", МетаданныеРеквизиты.Качество.Тип);
	
	КачестваМассив = Новый Массив(); // Массив Из см. ПолучитьСтруктуруТекста
	Для Сч = 10 По 14 Цикл
		Тексты = ПолучитьСтруктуруТекста();
		
		Текст = СокрЛП(Макет.ПолучитьОбласть(Сч, 1, Сч, 1).ТекущаяОбласть.Текст);
		Тексты.Английский = Текст;
		
		Текст = СокрЛП(Макет.ПолучитьОбласть(Сч, 2, Сч, 2).ТекущаяОбласть.Текст);
		Тексты.Русский = Текст;
		
		КачестваМассив.Добавить(Тексты);
	КонецЦикла;
	
	ШаблонПолноеИмя = "%1 %2";
	Для Сч = 1 По 6 Цикл
		НаименованиеКамня = ПолучитьСтруктуруТекста();
		
		Текст = СокрЛП(Макет.ПолучитьОбласть(Сч, 1, Сч, 1).ТекущаяОбласть.Текст);
		НаименованиеКамня.Английский = Текст;
		
		Текст = СокрЛП(Макет.ПолучитьОбласть(Сч, 2, Сч, 2).ТекущаяОбласть.Текст);
		НаименованиеКамня.Русский = Текст;
		
		Для СчКачества = 0 По КачестваМассив.ВГраница() Цикл
			Качество = КачестваМассив[СчКачества];
			
			НоваяСтрока = КамниТЗ.Добавить();			
			НоваяСтрока.НазваниеНаАнглийском = СтрШаблон(ШаблонПолноеИмя, 
				Качество.Английский, НаименованиеКамня.Английский);
			НоваяСтрока.Наименование = СтрШаблон(ШаблонПолноеИмя, 
				Качество.Русский, НаименованиеКамня.Русский);
			НоваяСтрока.Качество = СчКачества + 1;
			НоваяСтрока.НаименованиеКамняАнглийское = НаименованиеКамня.Английский;
			НоваяСтрока.НаименованиеКамняРусское = НаименованиеКамня.Русский; 
		КонецЦикла;		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Камни.Наименование,
	|	Камни.Ссылка
	|ИЗ
	|	Справочник.Камни КАК Камни
	|ГДЕ
	|	Камни.Наименование В (&Наименования)";
	Запрос.УстановитьПараметр("Наименования", КамниТЗ.ВыгрузитьКолонку("Наименование"));
	ТЗСуществующие = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТЗ Из КамниТЗ Цикл
		Отбор = Новый Структура("Наименование", СтрокаТЗ.Наименование);
		Если ТЗСуществующие.НайтиСтроки(Отбор).Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;
		КаменьОбъект = Справочники.Камни.СоздатьЭлемент();
		КаменьОбъект.Наименование = СтрокаТЗ.Наименование;
		КаменьОбъект.НазваниеНаАнглийском = СтрокаТЗ.НазваниеНаАнглийском;
		КаменьОбъект.НаименованиеКамняАнглийское = СтрокаТЗ.НаименованиеКамняАнглийское;
		КаменьОбъект.НаименованиеКамняРусское = СтрокаТЗ.НаименованиеКамняРусское;
		КаменьОбъект.Качество = СтрокаТЗ.Качество;
		КаменьОбъект.Записать();
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьРуныИЗаполнитьРецепты(Команда)
	ДополнитьРуныИЗаполнитьРецептыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДополнитьРуныИЗаполнитьРецептыНаСервере()
	Макет = ПолучитьОбщийМакет("РецептыРун");
	
	ТЗРецепты = Новый ТаблицаЗначений();
	МетаданныеРецепты = Метаданные.Справочники.Рецепты;
	ТЗРецепты.Колонки.Добавить("РезультатСтрока", Новый ОписаниеТипов("Строка"));
	ТЗРецепты.Колонки.Добавить("Результат", МетаданныеРецепты.Реквизиты.Результат.Тип);
	ТЗРецепты.Колонки.Добавить("ПредметСтрока", Новый ОписаниеТипов("Строка"));
	ТЗРецепты.Колонки.Добавить("Предмет", МетаданныеРецепты.Реквизиты.Результат.Тип);
	ТЗРецепты.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	
	ТЗРуны = Новый ТаблицаЗначений();
	ТЗРуны.Колонки.Добавить("Руна", Новый ОписаниеТипов("СправочникСсылка.Руны"));
	ТЗРуны.Колонки.Добавить("РунаИмя", Новый ОписаниеТипов("Строка"));
	ТЗРуны.Колонки.Добавить("СвойстваОружия", Новый ОписаниеТипов("Массив"));
	ТЗРуны.Колонки.Добавить("СвойстваБрони", Новый ОписаниеТипов("Массив"));
	
	СоответствиеИмяПредметаПредмет = Новый Соответствие();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Руны.АнглийскоеНаименование,
	|	Руны.Ссылка
	|ИЗ
	|	Справочник.Руны КАК Руны
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Камни.НазваниеНаАнглийском,
	|	Камни.Ссылка
	|ИЗ
	|	Справочник.Камни КАК Камни
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Камни.НаименованиеКамняАнглийское,
	|	Камни.Ссылка
	|ИЗ
	|	Справочник.Камни КАК Камни");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеИмяПредметаПредмет[Выборка.АнглийскоеНаименование] = Выборка.Ссылка;
	КонецЦикла;
	
	НачалоРуны = 2;
	КонецРуны = 0;
	ИмяРуны = СокрЛП(Макет.ПолучитьОбласть(2, 1, 2, 1).ТекущаяОбласть.Текст);;
	
	Для Сч = 2 По Макет.ВысотаТаблицы Цикл
		Текст = СокрЛП(Макет.ПолучитьОбласть(Сч, 1, Сч, 1).ТекущаяОбласть.Текст);
		Если Текст <> ""
		И Текст <> ИмяРуны Тогда
			КонецРуны = Сч - 1;
			НоваяСтрокаРуна = ТЗРуны.Добавить();
			НоваяСтрокаРуна.РунаИмя = ТРег(ИмяРуны);
			НоваяСтрокаРуна.Руна = СоответствиеИмяПредметаПредмет[ТРег(НоваяСтрокаРуна.РунаИмя)];
			
			ИмяРуны = Текст;						
			
			Для СчЭффект = НачалоРуны По КонецРуны Цикл
				Текст = СокрЛП(Макет.ПолучитьОбласть(СчЭффект, 2, СчЭффект, 2).ТекущаяОбласть.Текст);
				Если Текст <> "" Тогда
					НоваяСтрокаРуна.СвойстваОружия.Добавить(Текст);
				КонецЕсли;
				
				Текст = СокрЛП(Макет.ПолучитьОбласть(СчЭффект, 3, СчЭффект, 3).ТекущаяОбласть.Текст);
				Если Текст <> "" Тогда
					НоваяСтрокаРуна.СвойстваБрони.Добавить(Текст);
				КонецЕсли;
				
				Текст = СокрЛП(Макет.ПолучитьОбласть(СчЭффект, 4, СчЭффект, 4).ТекущаяОбласть.Текст);
				Если Текст <> ""
				И Текст <> "None" Тогда
					НоваяСтрокаРецепт = ТЗРецепты.Добавить();
					НоваяСтрокаРецепт.РезультатСтрока = НоваяСтрокаРуна.РунаИмя;
					НоваяСтрокаРецепт.Результат = НоваяСтрокаРуна.Руна;
					
					ШаблонПоиска = "0123456789";
					КоличествоСтрока = Лев(Текст, 1);
					Если СтрНайти(ШаблонПоиска, КоличествоСтрока) = 0 Тогда
						Количество = 1;
					Иначе
						Количество = Число(КоличествоСтрока);
						Текст = СокрЛ(Сред(Текст, 2));
					КонецЕсли;
					НоваяСтрокаРецепт.ПредметСтрока = ТРег(Текст);
					НоваяСтрокаРецепт.Предмет = СоответствиеИмяПредметаПредмет[НоваяСтрокаРецепт.ПредметСтрока];
					НоваяСтрокаРецепт.Количество = Количество;
				КонецЕсли; 
				
			КонецЦикла;
			НачалоРуны = Сч;
					КонецЕсли;		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Камни.Ссылка КАК Ссылка,
	|	Камни.Качество КАК Качество,
	|	Камни.НаименованиеКамняАнглийское КАК НаименованиеКамняАнглийское
	|ИЗ
	|	Справочник.Камни КАК Камни
	|
	|УПОРЯДОЧИТЬ ПО
	|	НаименованиеКамняАнглийское,
	|	Качество";
	ТЗ = Запрос.Выполнить().Выгрузить();
	Для Сч = 0 По ТЗ.Количество() - 1 Цикл
		СтрокаТЗ = ТЗ[Сч];
		Если СтрокаТЗ.Качество = 1 Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрокаРецепт = ТЗРецепты.Добавить();
		НоваяСтрокаРецепт.Результат = СтрокаТЗ.Ссылка;
		НоваяСтрокаРецепт.Предмет = ТЗ[Сч - 1].Ссылка;
		НоваяСтрокаРецепт.Количество = 3;
	КонецЦикла;           
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Рецепты.Результат КАК Результат,
	               |	Рецепты.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Рецепты КАК Рецепты
	               |ГДЕ
	               |	Рецепты.Результат В(&Результаты)";
	Запрос.УстановитьПараметр("Результаты", ТЗРецепты.ВыгрузитьКолонку("Результат"));
	ТЗНайденныеРецепты = Запрос.Выполнить().Выгрузить();
	
	ТекущийРезультат = "";         
	НовыйОбъект = Неопределено;
	Пропускать = Ложь;
	Для Каждого СтрокаРецепта Из ТЗРецепты Цикл
		Если ТекущийРезультат <> СтрокаРецепта.Результат Тогда
			Если НовыйОбъект <> Неопределено
			И Не Пропускать Тогда
				НовыйОбъект.Записать();
			КонецЕсли;
			
			ТекущийРезультат = СтрокаРецепта.Результат;
			СтрокаТЗ = ТЗНайденныеРецепты.Найти(ТекущийРезультат, "Результат");
			Если (СтрокаТЗ <> Неопределено) Тогда
				НовыйОбъект = СтрокаТЗ.Ссылка.ПолучитьОбъект();
				НовыйОбъект.Рецепт.Очистить();
			Иначе	
				НовыйОбъект = Справочники.Рецепты.СоздатьЭлемент();
				НовыйОбъект.Результат = СтрокаРецепта.Результат;
				НовыйОбъект.Наименование = СтрокаРецепта.Результат;
			КонецЕсли;
		КонецЕсли;
		Если Пропускать Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = НовыйОбъект.Рецепт.Добавить();
		НоваяСтрока.Предмет = СтрокаРецепта.Предмет;
		НоваяСтрока.Количество = СтрокаРецепта.Количество;
	КонецЦикла;
	
	Если Не Пропускать Тогда
		НовыйОбъект.Записать();
	КонецЕсли;

	Для Каждого РунаСтрока Из ТЗРуны Цикл
		РунаОбъект = РунаСтрока.Руна.ПолучитьОбъект();
		
		РунаОбъект.ЭффектыБрони.Очистить();
		Для Каждого Эффект ИЗ РунаСтрока.СвойстваБрони Цикл
			НоваяСтрока = РунаОбъект.ЭффектыБрони.Добавить();
			НоваяСтрока.ЭффектБрони = Эффект;
		КонецЦикла;
		
		РунаОбъект.ЭффектыОружия.Очистить();
		Для Каждого Эффект ИЗ РунаСтрока.СвойстваОружия Цикл
			НоваяСтрока = РунаОбъект.ЭффектыОружия.Добавить();
			НоваяСтрока.ЭффектОружия = Эффект;
		КонецЦикла;
		
		РунаОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры



&НаСервере
Процедура СоздатьНаСервере()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Количество(*) КАК Количество
	|ИЗ
	|	Справочник.Руны");
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Если Выборка.Количество > 0 Тогда
		Сообщить("Уже загружено");
		Возврат;
	КонецЕсли;
	
	Макет = ПолучитьОбщийМакет("Макет");

	РунныеСлова = Новый ТаблицаЗначений;
	РунныеСлова.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	РунныеСлова.Колонки.Добавить("НаименованиеНаАнглийском", Новый ОписаниеТипов("Строка"));
	РунныеСлова.Колонки.Добавить("НаименованиеНаРунном", Новый ОписаниеТипов("Строка"));
	РунныеСлова.Колонки.Добавить("КоличествоРун", Новый ОписаниеТипов("Число"));
	РунныеСлова.Колонки.Добавить("Состав", Новый ОписаниеТипов("Массив"));
	РунныеСлова.Колонки.Добавить("Шмот", Новый ОписаниеТипов("Массив"));
	РунныеСлова.Колонки.Добавить("Эффекты", Новый ОписаниеТипов("Массив"));
	РунныеСлова.Колонки.Добавить("Уровень", Новый ОписаниеТипов("Число"));
		
	ОбластиРунноеСлово = Новый Массив;
	
	РунноеСловоНачало = 2;
	РунноеСловоКонец = 0;
	РунноеСловоКончилось = Ложь;
	КонецТаблицы = Ложь;
	Для Сч = 2 По Макет.ВысотаТаблицы Цикл
		ТекущаяОбласть = Макет.ПолучитьОбласть(Сч, 2, Сч, 2);				
		Текст = СокрЛП(ТекущаяОбласть.ТекущаяОбласть.Текст);
		
		
		Если ЗначениеЗаполнено(Текст) Тогда
			Если РунноеСловоКончилось Тогда
				РунноеСловоКончилось = Ложь;
				РунноеСловоКонец = Сч - 1;
				ОбластиРунноеСлово.Добавить(Новый Структура("Начало, Конец", РунноеСловоНачало, РунноеСловоКонец));
				РунноеСловоНачало = Сч;
			КонецЕсли;
			Если Сч = РунноеСловоНачало Тогда
				НоваяСтрока = РунныеСлова.Добавить();
				НоваяСтрока.Наименование = Текст;
			ИначеЕсли Сч = РунноеСловоНачало + 1 Тогда
				НоваяСтрока.НаименованиеНаАнглийском = Текст;
			ИначеЕсли Сч = РунноеСловоНачало + 2 Тогда
				НоваяСтрока.НаименованиеНаРунном = Текст;
			КонецЕсли;
			
		ИначеЕсли Не РунноеСловоКончилось Тогда
			РунноеСловоКончилось = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	РунноеСловоКонец = Сч; 
	ОбластиРунноеСлово.Добавить(Новый Структура("Начало, Конец", РунноеСловоНачало, РунноеСловоКонец));

	Руны = Новый ТаблицаЗначений;
	Руны.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	Руны.Колонки.Добавить("Картинка", Новый ОписаниеТипов("Картинка"));
	Руны.Колонки.Добавить("Двоичные", Новый ОписаниеТипов("ХранилищеЗначения"));
	Руны.Колонки.Добавить("Найдено", Новый ОписаниеТипов("Булево"));
	
	Шмот = Новый ТаблицаЗначений;
	Шмот.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));

	ТребуемыйУровеньСтрока = "Требуемый уровень: ";
	ДлинаСтрокиТребуемыйУровень = СтрДлина(ТребуемыйУровеньСтрока);
	
	Для ИндексРунныеОбласти = 0 По ОбластиРунноеСлово.ВГраница() Цикл
		СтрокаРунноеСлово = РунныеСлова[ИндексРунныеОбласти];
		ОбластьРунноеСлово = ОбластиРунноеСлово[ИндексРунныеОбласти];
		КоличествоРун = 0;
		Для Сч = ОбластьРунноеСлово.Начало По ОбластьРунноеСлово.Конец Цикл
			
			ТекущаяОбласть = Макет.ПолучитьОбласть(Сч, 3, Сч, 3);				
			Текст = ТекущаяОбласть.ТекущаяОбласть.Текст;
			Если ЗначениеЗаполнено(Текст) Тогда
				НоваяРуна = Руны.Добавить();
				НоваяРуна.Наименование = Текст;
				КоличествоРун = КоличествоРун + 1;
				СтрокаРунноеСлово.Состав.Добавить(Текст);
			Иначе 
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		СтрокаРунноеСлово.КоличествоРун = КоличествоРун;
		Отбор = Новый структура("Наименование, Найдено", "", Истина);
		Для Сч = 1 По Руны.Количество() Цикл
			СтрокаТЗ = Руны[Сч - 1];
			Отбор.Наименование = СтрокаТЗ.Наименование;
			Если Руны.НайтиСтроки(Отбор).Количество() > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ИмяКартинки = "D" + Формат(Сч, "ЧГ=");
			Картинка = Макет.Рисунки[ИмяКартинки].Картинка;
			Двоичные = Картинка.ПолучитьДвоичныеДанные();
			СтрокаТЗ.Картинка = Картинка;
			СтрокаТЗ.Двоичные = Новый ХранилищеЗначения(Двоичные);
			СтрокаТЗ.Найдено = Истина;		
		КонецЦикла;
		
		Для Сч = ОбластьРунноеСлово.Начало + 1 По ОбластьРунноеСлово.Конец Цикл
			
			ТекущаяОбласть = Макет.ПолучитьОбласть(Сч, 4, Сч, 4);				
			Текст = ТекущаяОбласть.ТекущаяОбласть.Текст;
			Если ЗначениеЗаполнено(Текст) Тогда
				НоваяРуна = Шмот.Добавить();
				НоваяРуна.Наименование = Текст;
				СтрокаРунноеСлово.Шмот.Добавить(Текст);
			Иначе 
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Для Сч = ОбластьРунноеСлово.Начало + 1 По ОбластьРунноеСлово.Конец Цикл
			
			ТекущаяОбласть = Макет.ПолучитьОбласть(Сч, 5, Сч, 5);				
			Текст = СокрЛП(ТекущаяОбласть.ТекущаяОбласть.Текст);
			Если ЗначениеЗаполнено(Текст) Тогда
				Если Лев(Текст, ДлинаСтрокиТребуемыйУровень) = ТребуемыйУровеньСтрока Тогда
					Текст = СтрЗаменить(Текст, ТребуемыйУровеньСтрока, "");
					Текст = СтрЗаменить(Текст, "-й", "");
					Текст = СокрЛП(Текст);
					СтрокаРунноеСлово.Уровень = Число(Текст);
					Прервать;
				КонецЕсли;
				СтрокаРунноеСлово.Эффекты.Добавить(Текст);
			Иначе 
				Прервать;
			КонецЕсли;
			
		КонецЦикла;

		
	КонецЦикла;    
	
	Для Каждого СтрокаТЗ Из Руны.НайтиСтроки(Новый Структура("Найдено", Ложь)) Цикл
		Руны.Удалить(СтрокаТЗ);
	КонецЦикла;
	
	Шмот.Свернуть("Наименование");		     
	
	КэшРуны = Новый Соответствие;
	КэшШмот = Новый Соответствие;
	
	НачатьТранзакцию();
	
	Для Каждого СтрокаТЗ Из Руны Цикл
		Руна = Справочники.Руны.СоздатьЭлемент();
		Руна.Наименование = СтрокаТЗ.Наименование;
		Руна.Картинка = Новый ХранилищеЗначения(СтрокаТЗ.Картинка);
		Руна.ДвоичныеДанные = СтрокаТЗ.Двоичные;
		Руна.Записать();
		
		КэшРуны[Руна.Наименование] = Руна.Ссылка;
	КонецЦикла;
	
	Для Каждого СтрокаТЗ Из Шмот Цикл
		Шмот = Справочники.ВидыШмота.СоздатьЭлемент();
		Шмот.Наименование = СтрокаТЗ.Наименование;
		Шмот.Записать();
		
		КэшШмот[Шмот.Наименование] = Шмот.Ссылка;
	КонецЦикла;        
	РунныеСловМассиа = Новый Массив;	
	Для Каждого СтрокаТЗ Из РунныеСлова Цикл
		РунноеСлово = Справочники.РунныеСлова.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(РунноеСлово, СтрокаТЗ);
		
		Для Каждого ИмяРуны Из СтрокаТЗ.Состав Цикл
			НоваяСтрока = РунноеСлово.Руны.Добавить();
			НоваяСтрока.Руна = КэшРуны[ИмяРуны];
		КонецЦикла;
		
		Для Каждого ИмяШмотки Из СтрокаТЗ.Шмот Цикл
			НоваяСтрока = РунноеСлово.ПоддерживаемыйШмот.Добавить();
			НоваяСтрока.Шмот = КэшШмот[ИмяШмотки];
		КонецЦикла;
		
		Для Каждого Свойство Из СтрокаТЗ.Эффекты Цикл
			НоваяСтрока = РунноеСлово.Свойства.Добавить();
			НоваяСтрока.Свойство = Свойство;
		КонецЦикла;
		РунноеСлово.Записать();
		РунныеСловМассиа.Добавить(РунноеСлово.Ссылка);
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда)
	СоздатьНаСервере();
КонецПроцедуры
